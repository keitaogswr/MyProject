/*******************************************************************************
* タイトル名：
* ファイル名：renderer.h
* 作成者	：AT13B284 10 小笠原啓太
* 作成日	：
********************************************************************************
* 更新履歴	：
*
*******************************************************************************/
/*******************************************************************************
* インクルードガード
*******************************************************************************/
#ifndef _RENDERER_H_
#define _RENDERER_H_

/*******************************************************************************
* インクルードファイル
*******************************************************************************/
#include "d3dx9.h"

/*******************************************************************************
* ライブラリのリンク
*******************************************************************************/
#pragma comment( lib, "d3d9.lib" )		// 描画処理に必要
#pragma comment( lib, "d3dx9.lib" )		// 上記の拡張ライブラリ
#pragma comment( lib, "dxguid.lib" )	// DirectXコンポーネント使用に必要

/*******************************************************************************
* マクロ定義
*******************************************************************************/
#define VERTEX_MAX		( 4 )			// 頂点の最大数
#define FVF_VERTEX_2D	( D3DFVF_XYZRHW | D3DFVF_DIFFUSE | D3DFVF_TEX1 )				// 2Dポリゴン用の頂点フォーマット
#define FVF_VERTEX_3D	( D3DFVF_XYZ | D3DFVF_NORMAL | D3DFVF_DIFFUSE | D3DFVF_TEX1 )	// 3Dポリゴン用の頂点フォーマット

/*******************************************************************************
* 構造体
*******************************************************************************/
//上記フォーマットに合わせた構造体
struct VERTEX_2D
{
	D3DXVECTOR3 pos;	// 頂点座標
	float rhw;			// 座標変換用係数
	D3DCOLOR col;		// 頂点カラー
	D3DXVECTOR2 tex;	// テクスチャ座標
};

typedef struct
{
	D3DXVECTOR3 pos;	// 頂点座標
	D3DXVECTOR3 nor;	// 法線
	D3DCOLOR col;		// 頂点カラー
	D3DXVECTOR2 tex;	// テクスチャ座標
}VERTEX_3D;

/*******************************************************************************
* 前方宣言
*******************************************************************************/
class CScene;
class CCamera;
class CLight;

/*******************************************************************************
* クラス宣言
*******************************************************************************/
// レンダラークラス
class CRenderer
{
	private:
		LPDIRECT3D9			m_D3D;
		LPDIRECT3DDEVICE9	m_D3DDevice;	// デバイスへのポインタ
		//LPD3DXFONT			m_Font;			// フォントへのポインタ

		// ワイヤーフレーム
		typedef enum
		{
			WIREFRAME_NONE = 0,
			WIREFRAME_ON
		}WIREFRAME;

		WIREFRAME m_Wireframe;
		bool m_bFog;
	public:
		CRenderer();
		~CRenderer();
		HRESULT Init( HINSTANCE hInstance, HWND hWnd, BOOL bWindow );
		void Uninit( void );
		void Update( void );
		void Draw( void );

		void Begin( void );
		void End( void );

		LPDIRECT3DDEVICE9 GetDevice( void );
};

#endif