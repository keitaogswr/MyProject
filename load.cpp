/*******************************************************************************
* タイトル名：
* ファイル名：load.cpp
* 作成者	：AT13B284 10 小笠原啓太
* 作成日	：
********************************************************************************
* 更新履歴	：
*
*******************************************************************************/
/*******************************************************************************
* インクルードファイル
*******************************************************************************/
#include <process.h>
#include "main.h"
#include "manager.h"
#include "mode.h"
#include "game.h"
#include "fade.h"
#include "scene.h"
#include "scene2D.h"
#include "logo.h"
#include "load.h"
#include "texture.h"

/*******************************************************************************
* マクロ定義
*******************************************************************************/

/*******************************************************************************
* グローバル変数
*******************************************************************************/
HANDLE CLoad::m_Thread;					// スレッド情報
unsigned int CLoad::m_ThreadId;			// スレッドID
CGame *CLoad::m_Game = NULL;			// ゲーム

/*******************************************************************************
* 関数名：CLoad::CLoad()
*
* 引数	：
* 戻り値：
* 説明	：コンストラクタ
*******************************************************************************/
CLoad::CLoad()
{
	m_bMultithread = false;
	m_Logo = NULL;
}

/*******************************************************************************
* 関数名：CLoad::~CLoad()
*
* 引数	：
* 戻り値：
* 説明	：デストラクタ
*******************************************************************************/
CLoad::~CLoad()
{
}

/*******************************************************************************
* 関数名：void CLoad::Init( void )
*
* 引数	：
* 戻り値：
* 説明	：初期化処理
*******************************************************************************/
void CLoad::Init(void)
{
	// スレッドの生成
	m_Thread = (HANDLE)_beginthreadex(NULL,
									0,
									NowLoading,		// スレッドとして実行する関数
									NULL,
									0,
									&m_ThreadId);	// スレッドのID

	m_Logo = CLogo::Create(Vector3(SCREEN_WIDTH / 2, SCREEN_HEIGHT / 2, 0.0f), -0.01f, TEXTURE_TYPE_GEAR_000, 90.0f, 90.0f, false);
}

/*******************************************************************************
* 関数名：void CLoad::Uninit( void )
*
* 引数	：
* 戻り値：
* 説明	：終了処理
*******************************************************************************/
void CLoad::Uninit(void)
{
	CloseHandle(m_Thread);
	m_Game = NULL;
	m_Logo->SetDeleteFlg(true);
}

/*******************************************************************************
* 関数名：void CLoad::Update( void )
*
* 引数	：
* 戻り値：
* 説明	：更新処理
*******************************************************************************/
void CLoad::Update(void)
{
	// スレッドの状態取得
	GetExitCodeThread(m_Thread, &m_ExitCode);

	m_Logo->Update();
	if (m_ExitCode != STILL_ACTIVE)
	{
		CFade::Start(m_Game);
	}
}

/*******************************************************************************
* 関数名：void CLoad::Draw( void )
*
* 引数	：
* 戻り値：
* 説明	：描画処理
*******************************************************************************/
void CLoad::Draw(void)
{
	m_Logo->Draw();
}

/*******************************************************************************
* 関数名：unsigned int CLoad::NowLoading(void *p)
*
* 引数	：
* 戻り値：
* 説明	：ロード処理
*******************************************************************************/
unsigned int CLoad::NowLoading(void *p)
{
	m_Game = new CGame;
	m_Game->Init();

	return 0;
}
