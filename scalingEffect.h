/*******************************************************************************
* タイトル名：
* ファイル名：scalingEffect.h
* 作成者	：AT13B284 10 小笠原啓太
* 作成日	：
********************************************************************************
* 更新履歴	：
*
*******************************************************************************/
/*******************************************************************************
* インクルードガード
*******************************************************************************/
#pragma once
/*******************************************************************************
* インクルードファイル
*******************************************************************************/
#include "effect.h"

/*******************************************************************************
* マクロ定義
*******************************************************************************/

/*******************************************************************************
* 構造体
*******************************************************************************/

/*******************************************************************************
* 前方宣言
*******************************************************************************/

/*******************************************************************************
* クラス宣言
*******************************************************************************/
class CScalingEffect : public CEffect
{
protected:
	float m_fScalingValue;			// 拡縮値
	Vector3 m_Vec;					// 噴射方向
	Vector3 m_PosOffset;			// オフセット
	D3DXMATRIX *m_pParentMtx;		// 親のマトリクス

	virtual void SetWorldMatrix(void);			// ワールドマトリックス設定
public:
	CScalingEffect(DRAWORDER DrawOrder = DRAWORDER_EFFECT, OBJTYPE ObjType = OBJTYPE_EFFECT);
	~CScalingEffect();

	void Init(Vector3 pos, D3DXCOLOR col, float width, float height);
	void Update(void);

	static CScalingEffect *Create(Vector3 pos, Vector3 vec, D3DXCOLOR col, float width, float height, float scale, int life, D3DXMATRIX *matrix);

	void SetScalingValue(float scale) { m_fScalingValue = scale; }
	void SetVec(Vector3 vec) { m_Vec = vec; }
	void SetParentMtx(D3DXMATRIX *matrix) { m_pParentMtx = matrix; }
};